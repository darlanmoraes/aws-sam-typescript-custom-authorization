---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template for Lambdas
Parameters:
  Stage:
    Type: String
  Bucket:
    Type: String
  Region:
    Type: String
  AccessKeyId:
    Type: String
  SecretAccessKey:
    Type: String
  Hash:
    Type: String
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 180
Resources:
  AuthorizerLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/lambdas/authorizer/handler.execute
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Join [ "", [ "sam/", !Ref Stage, "/", !Ref Hash, "-lambda-authorizer.zip"] ]
      FunctionName: !Join [ "", [ !Ref Stage, "-AuthorizerLambda"] ]
      Role:
        Fn::Sub: ${AuthorizerLambdaRole.Arn}
  AuthorizerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CommentsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/lambdas/comments/handler.execute
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Join [ "", [ "sam/", !Ref Stage, "/", !Ref Hash, "-lambda-comments.zip"] ]
      FunctionName: !Join [ "", [ !Ref Stage, "-CommentsLambda"] ]
      Environment:
        Variables:
          ENV: !Ref Stage
          REGION: !Ref Region
          ACCESS_KEY_ID: !Ref AccessKeyId
          SECRET_ACCESS_KEY: !Ref SecretAccessKey
  CommentsLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CommentsLambda
      Principal: "*"
  PostsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/lambdas/posts/handler.execute
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Join [ "", [ "sam/", !Ref Stage, "/", !Ref Hash, "-lambda-posts.zip"] ]
      FunctionName: !Join [ "", [ !Ref Stage, "-PostsLambda"]]
      Environment:
        Variables:
          ENV: !Ref Stage
          REGION: !Ref Region
          ACCESS_KEY_ID: !Ref AccessKeyId
          SECRET_ACCESS_KEY: !Ref SecretAccessKey
  PostsLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PostsLambda
      Principal: "*"