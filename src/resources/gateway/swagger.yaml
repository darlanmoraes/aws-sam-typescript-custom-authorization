swagger: 2.0
basePath:
  Fn::Sub: /${Stage}
info:
  title:
    Fn::Sub: ${Stage}-aws-sam-typescript-custom-authorization
securityDefinitions:
  AuthorizerLambda:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      type: token
      authorizerUri: 
        Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Stage}-AuthorizerLambda/invocations"
      authorizerCredentials:
        Fn::Sub: ${ApiGatewayAuthorizerRole.Arn}
      authorizerResultTtlInSeconds: 60
schemes:
- https
paths:
  /comments:
    get:
      produces:
      - application/json
      security:
        - AuthorizerLambda: []
      responses:
        '200':
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Stage}-CommentsLambda/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    post:
      consumes:
      - application/json
      produces:
      - application/json
      security:
        - AuthorizerLambda: []
      responses:
        '201':
          description: 201 response
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 201
        uri:
          Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Stage}-CommentsLambda/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /posts:
    get:
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Stage}-PostsLambda/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '201':
          description: 201 response
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 201
        uri:
          Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Stage}-PostsLambda/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
definitions:
  Empty:
    type: object
    title: Empty Schema